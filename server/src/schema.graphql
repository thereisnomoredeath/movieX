type Query {
  movies(page: Int): Movies
  moviesById(id: [Int]): [Movie]
  movieDetails(id: Int): MovieDetails
  movieDetailsArray(id: [Int]): [MovieDetails]
}

type Movies {
    page: Int!
    totalResults: Int!
    totalPages: Int!
    results: [Movie!]!
}

type Movie {
    id: Int
    title: String!
    releaseDate: String
    posterPath: String
    originalTitle: String
    adult: Boolean
    overview: String
    originalLanguage: String
    backdropPath: String
    popularity: Float
    voteCount: Int
    video: Boolean
    voteAverage: Float
    genres: [Int]
}

type MovieDetails {
    adult: Boolean
    budget: Int
    genres: [Allgenres]
    homepage: String
    id: Int
    originalLanguage: String
    originalTitle: String
    overview: String
    popularity: Float
    posterPath: String
    productionCountries: [AllProductionCountries]
    releaseDate: String
    runtime: Int
    status: String
    tagline: String
    title: String
    voteAverage: Float
    voteCount: Int
}

type Allgenres {
    id: Int
    name: String
}

type AllProductionCountries {
    iso_3166_1: String
    name: String
}